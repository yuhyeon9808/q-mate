spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      connect-timeout: 2s
      timeout: 2s

  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
        show_sql: false

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH_GOOGLE_CLIENT_SECRET}
            scope: openid, email, profile
            redirect-uri: "http://ec2-43-201-32-144.ap-northeast-2.compute.amazonaws.com:8080/login/oauth2/code/{registrationId}"
          naver:
            client-id: ${OAUTH_NAVER_CLIENT_ID}
            client-secret: ${OAUTH_NAVER_CLIENT_SECRET}
            client-name: Naver
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            redirect-uri: "{baseUrl}/login/oauth2/code/naver"
            scope:
              - name
              - email
              - birthday
        provider:
          google:
            issuer-uri: https://accounts.google.com
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri:          https://nid.naver.com/oauth2.0/token
            user-info-uri:      https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

security:
  jwt:
    secret: ${JWT_SECRET}
    access-ttl-seconds: ${SECURITY_JWT_ACCESS_TTL_SECONDS:10800}
    refresh-ttl-seconds: ${SECURITY_JWT_REFRESH_TTL_SECONDS:1209600}

app:
  email-verification:
    jwt-secret: ${APP_EMAIL_VERIFICATION_JWT_SECRET}
    ttl-minutes: ${APP_EMAIL_VERIFICATION_TTL_MINUTES:10}
  frontend:
    origin: https://q-mate.vercel.app
#    success-url: https://q-mate.vercel.app/login/success
  oauth:
    google:
      client-id: ${OAUTH_GOOGLE_CLIENT_ID}
      client-secret: ${OAUTH_GOOGLE_CLIENT_SECRET}
      # 프론트가 code를 받는 콜백 주소
      redirect-uri: https://q-mate.vercel.app/login/oauth2/code/google

server:
  port: 8080
  forward-headers-strategy: native

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      probes:
        enabled: true   # /actuator/health/liveness, /readiness 포함